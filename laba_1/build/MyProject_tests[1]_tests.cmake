add_test([=[FuncTest.ReturnsExpectedString]=]  /Users/zena/Desktop/labs_oop/laba_1/build/MyProject_tests [==[--gtest_filter=FuncTest.ReturnsExpectedString]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[FuncTest.ReturnsExpectedString]=]  PROPERTIES WORKING_DIRECTORY /Users/zena/Desktop/labs_oop/laba_1/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[FuncTest.EmptyString]=]  /Users/zena/Desktop/labs_oop/laba_1/build/MyProject_tests [==[--gtest_filter=FuncTest.EmptyString]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[FuncTest.EmptyString]=]  PROPERTIES WORKING_DIRECTORY /Users/zena/Desktop/labs_oop/laba_1/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[FuncTest.NoDigits]=]  /Users/zena/Desktop/labs_oop/laba_1/build/MyProject_tests [==[--gtest_filter=FuncTest.NoDigits]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[FuncTest.NoDigits]=]  PROPERTIES WORKING_DIRECTORY /Users/zena/Desktop/labs_oop/laba_1/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[FuncTest.DigitsWithSpaces]=]  /Users/zena/Desktop/labs_oop/laba_1/build/MyProject_tests [==[--gtest_filter=FuncTest.DigitsWithSpaces]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[FuncTest.DigitsWithSpaces]=]  PROPERTIES WORKING_DIRECTORY /Users/zena/Desktop/labs_oop/laba_1/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[FuncTest.ConsecutiveDigits]=]  /Users/zena/Desktop/labs_oop/laba_1/build/MyProject_tests [==[--gtest_filter=FuncTest.ConsecutiveDigits]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[FuncTest.ConsecutiveDigits]=]  PROPERTIES WORKING_DIRECTORY /Users/zena/Desktop/labs_oop/laba_1/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[FuncTest.DigitsOnly]=]  /Users/zena/Desktop/labs_oop/laba_1/build/MyProject_tests [==[--gtest_filter=FuncTest.DigitsOnly]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[FuncTest.DigitsOnly]=]  PROPERTIES WORKING_DIRECTORY /Users/zena/Desktop/labs_oop/laba_1/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
set(  MyProject_tests_TESTS FuncTest.ReturnsExpectedString FuncTest.EmptyString FuncTest.NoDigits FuncTest.DigitsWithSpaces FuncTest.ConsecutiveDigits FuncTest.DigitsOnly)
